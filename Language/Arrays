//empty array
// var x = []  // WRONG need a type
var x: [Int] = []
var someInts = [Int]()

// init with array literals
var shoppingList: [String] = ["Eggs", "Milk"]
//init with half range
var m = Array(110..<114) //[110, 111, 112, 113]

print(m)
//create array with default value
var threeDoubles = Array(repeating: 0.0, count: 3)

//add two array with +
var anotherThreeDoubles = Array(repeating: 2.5, count: 3)
// anotherThreeDoubles is of type [Double], and equals [2.5, 2.5, 2.5]

var sixDoubles = threeDoubles + anotherThreeDoubles
// sixDoubles is inferred as [Double], and equals [0.0, 0.0, 0.0, 2.5, 2.5, 2.5]



shoppingList += ["Baking Powder"]
// shoppingList now contains 3 items
shoppingList += ["Chocolate Spread", "Cheese", "Butter"]
//Insert range replacing
shoppingList[shoppingList.count-2...shoppingList.count-1] = ["Bananas", "Apples"]
//contagious insert at index
shoppingList.insert("Maple Syrup", at: 0)
//remove at index and assign. Gaps are closed
let mapleSyrup = shoppingList.remove(at: 0)
//remove last
let apples = shoppingList.removeLast()

//iterate array
for item in shoppingList {
    print(item)
}

//DON'T CALCUALTE AN INDEX IN SWIFT
//ennumerate with index
for (index, value) in shoppingList.enumerated() {
    print("Item \(index + 1): \(value)")
}
//Want to find the location of a specific element?
if let idx = shoppingList.index(of: "Eggs") {
print(idx)
}
// a runtime error
//shoppingList[1000]

